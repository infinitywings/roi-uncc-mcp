Bootstrap: docker
From: ubuntu:noble

%labels
    Author Ehab Shoubaki
    Version 1.0
    Description Ubuntu Noble Apptainer Image

%environment
    export PATH=/usr/local/bin:/usr/bin:/bin
    export PATH=/usr/local/gridlabd/bin:$PATH
    export LANG=C.UTF-8
    export LC_ALL=C.UTF-8
    export OMPI_ALLOW_RUN_AS_ROOT=1
    export OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1
    export PETSC_DIR=/usr/local/petsc-3.16.4
    export LD_LIBRARY_PATH=/usr/local/petsc-3.16.4/lib


%post
    echo "Installing basic packages..."
    apt-get update && apt-get install -y \
        build-essential cmake git \
        emacs libzmq5 pip python3.12-venv\
        libzmq5-dev libboost-all-dev swig

    # Download, build and install HELICS
    cd ~
    mkdir develop
    cd develop
    git clone --recurse-submodules https://github.com/GMLC-TDC/HELICS.git helics
    cd helics
    cmake -DCMAKE_INSTALL_PREFIX=/usr/local/helics \
      	  -DCMAKE_BUILD_TYPE=Release \
      	  -DHELICS_BUILD_CXX_SHARED_LIB=ON \
      	  -B build
    cmake --build build -j -t install

    # Creating venv
    python3 -m venv /opt/myenv
    . /opt/myenv/bin/activate

    # Install HELICS python API and pypower for testing
    pip install helics "helics[cli]" matplotlib \
    			    pypower pyrlu \
    				scipy numpy==1.26.4

    # Install GridLab-D
    cd ~/develop
    apt-get install -y wget libxerces-c-dev \
    	    libhdf5-serial-dev curl \
	    libzmq3-dev gfortran libncurses5-dev \
	    libncursesw5-dev

    git clone https://github.com/gridlab-d/gridlab-d.git gridlabd
    cd gridlabd
    git submodule update --init --recursive

    sed -i '/add_subdirectory(third_party\/jsoncpp_lib)/d' CMakeLists.txt
    sed -i '/get_target_property(jsoncpp_lib/d' CMakeLists.txt
    sed -i '/target_link_libraries(jsoncpp_lib/d' CMakeLists.txt

    cmake -DCMAKE_INSTALL_PREFIX=/usr/local/gridlabd \
		  -DGLD_USE_HELICS=ON \
		  -DGLD_HELICS_DIR=/usr/local \
		  -B build

    cd build
    make -j8 && make install

    # Download, build and install GridPACK
    cd ~/develop

    # GridPACK dependency: Boost-1.78.0
    wget https://archives.boost.io/release/1.78.0/source/boost_1_78_0.tar.gz
    tar -xvf boost_1_78_0.tar.gz
    cd boost_1_78_0

    ./bootstrap.sh --prefix=/usr/local/boost-1.78.0 \
        --with-libraries=mpi,serialization,random,filesystem,system

    echo "using mpi ;" >> project-config.jam

    ./b2 -a -d+2 link=static stage
    ./b2 -a -d+2 link=static install

    # GridPACK dependency: GA-5.8

    cd ~/develop

    wget https://github.com/GlobalArrays/ga/releases/download/v5.8/ga-5.8.tar.gz
    tar -xvf ga-5.8.tar.gz
    cd ga-5.8

    ./configure --with-mpi-ts --disable-f77 --without-blas --enable-cxx --enable-i4 \
        --prefix=/usr/local/ga-5.8

    make -j 10 install

    # GridPACK dependency: PETSc-3.16.4
    cd ~/develop

    git clone https://gitlab.com/petsc/petsc.git
    cd petsc

    git checkout v3.16.4
    export PETSC_DIR=/root/develop/petsc

    ./configure --download-superlu_dist \
				--download-metis \
				--download-parmetis \
				--download-suitesparse \
				--download-f2cblaslapack \
				--prefix=/usr/local/petsc-3.16.4

    make && make install

    export OMPI_ALLOW_RUN_AS_ROOT=1
    export OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1

    export  PETSC_DIR=/usr/local/petsc-3.16.4
    export LD_LIBRARY_PATH=/usr/local/petsc-3.16.4/lib

    # Now for GridPACK
    cd ~/develop

    git clone https://github.com/GridOPTICS/GridPACK.git
    cd GridPACK

    git submodule update --init
    cd src
    git checkout develop

    mkdir build
    cd build

    apt-get install -y pkg-config

    cmake -D GA_DIR:STRING="/usr/local/ga-5.8" \
		  -D BOOST_ROOT:STRING="/usr/local/boost-1.78.0" \
		  -D Boost_DIR:STRING="/usr/local/boost-1.78.0/lib/cmake/Boost-1.78.0" \
		  -D BOOST_LIBRARYDIR:STRING="/usr/local/boost-1.78.0/lib"\
		  -D PETSC_DIR:STRING="/usr/local/petsc-3.16.4" \
		  -D MPI_CXX_COMPILER:STRING='mpicxx' \
		  -D MPI_C_COMPILER:STRING='mpicc' \
		  -D MPIEXEC:STRING='mpiexec' \
		  -D GRIDPACK_TEST_TIMEOUT:STRING=30 \
		  -D CMAKE_INSTALL_PREFIX:PATH="/usr/local/GridPACK" \
		  -D HELICS_INSTALL_DIR:STRING='/usr/local/helics' \
		  -D CMAKE_BUILD_TYPE:STRING=Debug ..

    make -j 10 install
    cd ~
    rm -rf develop/
    
    echo "Cleaning up..."
    apt-get clean && rm -rf /var/lib/apt/lists/*

%runscript
    echo "Welcome to the Co-simulation Toolchain"
    /bin/bash
    source /opt/myenv/bin/activate
